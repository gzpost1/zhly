<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cuiot.dmp.externalapi.service.mapper.gw.entranceguard.GwEntranceGuardMapper">
  <resultMap id="BaseResultMap" type="cn.cuiot.dmp.externalapi.service.entity.gw.entranceguard.GwEntranceGuardEntity">
    <!--@mbg.generated-->
    <!--@Table tb_gw_entrance_guard-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="building_id" jdbcType="BIGINT" property="buildingId" />
    <result column="brand_id" jdbcType="BIGINT" property="brandId" />
    <result column="model_id" jdbcType="BIGINT" property="modelId" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="direction" jdbcType="INTEGER" property="direction" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="latitude" jdbcType="DECIMAL" property="latitude" />
    <result column="longitude" jdbcType="DECIMAL" property="longitude" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="equip_status" jdbcType="TINYINT" property="equipStatus" />
    <result column="product_key" jdbcType="TINYINT" property="productKey" />
    <result column="device_key" jdbcType="TINYINT" property="deviceKey" />
    <result column="iot_id" jdbcType="TINYINT" property="iotId" />
    <result column="device_secret" jdbcType="TINYINT" property="deviceSecret" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, company_id, dept_id, `name`, building_id, brand_id, model_id, sn, direction, address,
    latitude, longitude, remark, status, equip_status, update_time, update_user, create_time, create_user,
    deleted, product_key, device_key, iot_id, device_secret
  </sql>

    <select id="queryForDetail" resultMap="BaseResultMap">
        SELECT * FROM tb_gw_entrance_guard WHERE deleted = 0 AND company_id = #{companyId} AND id = #{id}
    </select>

    <select id="queryForListByIds" resultMap="BaseResultMap">
        SELECT 
        *
        FROM
        tb_gw_entrance_guard
        WHERE 
        deleted = 0 AND company_id = #{companyId} 
        AND id IN 
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

  <select id="entranceGuardQueryForPage" resultType="cn.cuiot.dmp.externalapi.service.vo.EntranceGuardRecordVo">
      select * from (
      -- 格物门禁
      select
            t3.id as user_id,
            t3.name as user_name ,
            t3.phone_number as phone_number,
            t4.id as building_id,
            t4.name as building_name,
            t2.id as equipment_id,
            t2.name as equipment_name,
            t1.in_out as in_out,
            t1.is_open_door as is_open_door,
            t1.create_time as record_time,
            t1.image as record_img
      from
            tb_gw_entrance_guard_access_record t1
            left join tb_gw_entrance_guard t2 on	 t1.entrance_guard_id = t2.id
            left join `user` t3 on t1.person_id = t3.id
            left join tb_building_archives t4 on t4.id  = t2.building_id
      <where>

          <if test="params.companyId !=null and params.companyId !=''">
              and t2.company_id = #{params.companyId}
          </if>

          <if test="params.departmentIdList !=null and params.departmentIdList.size()>0">
              and  t4.department_id  in
              <foreach collection="params.departmentIdList" item="item" open="(" separator="," close=")">
                  #{item}
              </foreach>
          </if>

          <if test="params.loupanIds !=null and params.loupanIds.size()>0">
              and  t2.building_id  in
              <foreach collection="params.loupanIds" item="item" open="(" separator="," close=")">
                  #{item}
              </foreach>
          </if>

          <if test="params.userName !=null and params.userName !=''">
              and t3.name like  CONCAT('%', #{params.userName} ,'%' )
          </if>

          <if test="params.equipmentName !=null and params.equipmentName !=''">
              and t2.name like  CONCAT('%', #{params.equipmentName} ,'%' )
          </if>

          <if test="params.buildingId !=null and params.buildingId !=''">
              and t4.id =  #{params.buildingId}
          </if>

          <if test="params.inOut !=null ">
              and t1.in_out =  #{params.inOut}
          </if>

          <if test="params.isOpenDoor !=null ">
              and t1.is_open_door =  #{params.isOpenDoor}
          </if>

          <if test="params.recordTimeStart !=null">
              and t1.create_time >= #{params.recordTimeStart}
              and t1.create_time &lt;= #{params.recordTimeEnd}
          </if>

      </where>
      ) t

  </select>

</mapper>