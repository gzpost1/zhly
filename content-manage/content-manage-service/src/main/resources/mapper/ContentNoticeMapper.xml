<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cuiot.dmp.content.dal.mapper.ContentNoticeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.cuiot.dmp.content.dal.entity.ContentNoticeEntity">
        <id column="id" property="id" />
        <result column="publish_source" property="publishSource" />
        <result column="departments" property="departments" typeHandler="cn.cuiot.dmp.base.infrastructure.persistence.handler.JsonTypeHandler"/>
        <result column="buildings" property="buildings" typeHandler="cn.cuiot.dmp.base.infrastructure.persistence.handler.JsonTypeHandler"/>
        <result column="title" property="title" />
        <result column="type" property="type" />
        <result column="digest" property="digest" />
        <result column="effective_start_time" property="effectiveStartTime" />
        <result column="effective_end_time" property="effectiveEndTime" />
        <result column="inform" property="inform" typeHandler="cn.cuiot.dmp.base.infrastructure.persistence.handler.JsonTypeHandler"/>
        <result column="detail" property="detail" />
        <result column="status" property="status" />
        <result column="audit_status" property="auditStatus" />
        <result column="publish_status" property="publishStatus" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, publish_source, departments, buildings, title, `type`, digest, effective_start_time, effective_end_time, inform, detail, status, audit_status, publish_status, create_user, create_time, update_user, update_time
    </sql>
    <select id="queryForPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_content_notice
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <include refid="condition_sql_where"/>
        </trim>
    </select>
    <select id="queryForList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_content_notice
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <include refid="condition_sql_where"/>
        </trim>
    </select>

    <sql id="condition_sql_where">
        deleted = 0
        <if test="param.companyId != null">
            and company_id = #{param.companyId}
        </if>
        <if test="param.title != null and param.title != ''">
            and title like concat('%', #{param.title}, '%')
        </if>
        <if test="param.type != null and param.type != ''">
            and type = #{param.type}
        </if>
        <if test="param.status != null ">
            and status = #{param.status}
        </if>
        <if test="param.auditStatus != null ">
            and audit_status = #{param.auditStatus}
        </if>
        <if test="param.publishSource != null ">
            and publish_source = #{param.publishSource}
        </if>
        <if test="param.idNotIn != null and param.idNotIn.size > 0">
            and id not in
            <foreach collection="param.idNotIn" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="param.publishStatus != null ">
            and publish_status = #{param.publishStatus}
        </if>
        <if test="param.effectiveStatus != null ">
            <if test="param.effectiveStatus == 1">
                and effective_start_time &lt;= now() and effective_end_time &gt;= now()
            </if>
            <if test="param.effectiveStatus == 2">
                and effective_end_time &lt; now()
            </if>
            <if test="param.effectiveStatus == 0">
                and effective_start_time &gt;= now()
            </if>
        </if>

        <choose>
            <when test="param.buildings !=null and param.buildings.size > 0">
                and id in (
                SELECT DISTINCT data_id from tb_content_data_relevance WHERE data_type = #{dataType} and build_id in
                <foreach collection="param.buildings" item="building" open="(" close=")" separator=",">
                    #{building}
                </foreach>
                )
            </when>
            <when test="param.departments !=null and param.departments.size > 0">
                and id in (
                SELECT DISTINCT data_id from tb_content_data_relevance WHERE data_type = #{dataType} and department_id
                in
                <foreach collection="param.departments" item="department" open="(" close=")" separator=",">
                    #{department}
                </foreach>
                )
            </when>
            <otherwise>

            </otherwise>
        </choose>

    </sql>

    <select id="queryContentAdminNoticeStatistic" resultType="cn.cuiot.dmp.content.param.vo.ContentNoticeVo">

        select
            distinct t1.id as id ,
            t1.create_time as create_time ,
            t1.title as title
        from
            tb_content_notice t1
            left join (
                SELECT t.id, JSON_UNQUOTE(JSON_EXTRACT(t.departments , CONCAT('$[', idx, ']'))) AS dep
                    FROM tb_content_notice t
                    JOIN (
                        SELECT a.N + b.N * 10  AS idx
                            FROM (
                        SELECT 0 AS N
                            UNION ALL SELECT 1
                            UNION ALL SELECT 2
                            UNION ALL SELECT 3
                            UNION ALL SELECT 4
                            UNION ALL SELECT 5
                            UNION ALL SELECT 6
                            UNION ALL SELECT 7
                            UNION ALL SELECT 8
                            UNION ALL SELECT 9
                ) a
                CROSS JOIN (
                        SELECT 0 AS N
                            UNION ALL SELECT 1
                            UNION ALL SELECT 2
                            UNION ALL SELECT 3
                            UNION ALL SELECT 4
                            UNION ALL SELECT 5
                            UNION ALL SELECT 6
                            UNION ALL SELECT 7
                            UNION ALL SELECT 8
                            UNION ALL SELECT 9
                ) b
                    WHERE a.N + b.N * 10 &lt;= 100
                ) AS index_generator
                WHERE idx &lt; JSON_LENGTH(t.departments)
            ) t3 on t1.id = t3.id
                left join tb_building_archives t2 on
                t3.dep  = t2.department_id
        where
            t1.deleted = 0
          -- 已发布
          and t1.publish_status = 2
          -- 发布端 1 管理端   2 客户端
          and t1.publish_source = 1
        <if test="params.companyId != null">
            and t2.company_id = #{params.companyId}
        </if>
        <if test="params.departmentIds != null and params.departmentIds.size() > 0">
            and t3.dep in
            <foreach collection="params.departmentIds" item="dep" open="(" separator="," close=")">
                #{dep}
            </foreach>
        </if>
        <if test="params.loupanIds != null and params.loupanIds.size() > 0">
            and t2.id in
            <foreach collection="params.loupanIds" item="loupan" open="(" separator="," close=")">
                #{loupan}
            </foreach>
        </if>
        order by
            t1.create_time desc

    </select>

    <select id="queryContentAppNoticeStatistic" resultType="cn.cuiot.dmp.content.param.vo.ContentNoticeVo">

        select
            distinct t1.id as id ,
            t1.create_time as create_time ,
            t1.title as title
        from
            tb_content_notice t1
            left join (

                SELECT t.id, JSON_UNQUOTE(JSON_EXTRACT(t.buildings , CONCAT('$[', idx, ']'))) AS loupan
                    FROM tb_content_notice t
                JOIN (
                    SELECT a.N + b.N * 10  AS idx
                        FROM (
                    SELECT 0 AS N
                    UNION ALL SELECT 1
                    UNION ALL SELECT 2
                    UNION ALL SELECT 3
                    UNION ALL SELECT 4
                    UNION ALL SELECT 5
                    UNION ALL SELECT 6
                    UNION ALL SELECT 7
                    UNION ALL SELECT 8
                    UNION ALL SELECT 9
                    ) a
                CROSS JOIN (
                    SELECT 0 AS N
                    UNION ALL SELECT 1
                    UNION ALL SELECT 2
                    UNION ALL SELECT 3
                    UNION ALL SELECT 4
                    UNION ALL SELECT 5
                    UNION ALL SELECT 6
                    UNION ALL SELECT 7
                    UNION ALL SELECT 8
                    UNION ALL SELECT 9
                ) b
                    WHERE a.N + b.N * 10 &lt;= 100
                ) AS index_generator
            WHERE idx &lt; JSON_LENGTH(t.buildings)
            ) t3 on t1.id = t3.id
            inner join tb_building_archives t2 on t3.loupan = t2.id
        where
            t1.deleted = 0
          -- 已发布
          and t1.publish_status = 2
          -- 发布端 1 管理端   2 客户端
          and t1.publish_source = 2
        <if test="params.companyId != null">
            and t2.company_id = #{params.companyId}
        </if>
        <if test="params.loupanIds != null and params.loupanIds.size() > 0">
            and t3.loupan in
            <foreach collection="params.loupanIds" item="lou" open="(" separator="," close=")">
                #{lou}
            </foreach>
        </if>
        <if test="params.departmentIds != null and params.departmentIds.size() > 0">
            and t2.department_id in
            <foreach collection="params.departmentIds" item="dep" open="(" separator="," close=")">
                #{dep}
            </foreach>
        </if>
        order by
            t1.create_time desc
    </select>
</mapper>
