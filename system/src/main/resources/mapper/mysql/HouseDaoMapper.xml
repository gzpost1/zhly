<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cuiot.dmp.system.infrastructure.persistence.dao.HouseDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cn.cuiot.dmp.system.infrastructure.entity.HouseEntity" id="houseMap">
        <result property="id" column="id"/>
        <result property="pkOrgId" column="pk_org_id"/>
        <result property="selfDeptId" column="self_dept_id"/>
        <result property="communityId" column="community_id"/>
        <result property="buildingId" column="building_id"/>
        <result property="name" column="name"/>
        <result property="room" column="room"/>
        <result property="hall" column="hall"/>
        <result property="bathroom" column="bathroom"/>
        <result property="houseArea" column="house_area"/>
        <result property="usedArea" column="used_area"/>
        <result property="publicArea" column="public_area"/>
        <result property="storageNo" column="storage_no"/>
        <result property="parkingNo" column="parking_no"/>
        <result property="orientation" column="orientation"/>
        <result property="propertyYears" column="property_years"/>
        <result property="houseType" column="house_type"/>
        <result property="houseStatus" column="house_status"/>
        <result property="usedStatus" column="used_status"/>
        <result property="deliveryTime" column="delivery_time"/>
        <result property="description" column="description"/>
        <result property="createdOn" column="created_on"/>
        <result property="createdBy" column="created_by"/>
        <result property="updatedOn" column="updated_on"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="deletedFlag" column="deleted_flag"/>
        <result property="deletedOn" column="deleted_on"/>
        <result property="deletedBy" column="deleted_by"/>
    </resultMap>

    <sql id="column">
        id,
        pk_org_id,
        self_dept_id,
        community_id,
        building_id,
        name,
        room,
        hall,
        bathroom,
        house_area,
        used_area,
        public_area,
        storage_no,
        parking_no,
        orientation,
        property_years,
        floor_num,
        house_type,
        house_status,
        used_status,
        delivery_time,
        description,
        created_on,
        created_by
    </sql>

    <sql id="propertyColumn">
        id
                ,
        pk_org_id,
        self_dept_id,
        community_id parkId,
        region_id,
        building_id,
        floor_id,
        name  houseNum,
        house_area,
        used_area,
        public_area,
        house_attribute,
        description,
        created_on,
        created_by
    </sql>

        <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.cuiot.dmp.system.infrastructure.entity.HouseEntity">
        INSERT INTO house
        (pk_org_id,
        self_dept_id,
        community_id,
        building_id,
        name,
        room,
        hall,
        bathroom,
        house_area,
        used_area,
        public_area,
        storage_no,
        parking_no,
        orientation,
        property_years,
        floor_num,
        house_type,
        house_status,
        used_status,
        delivery_time,
        description,
        created_on,
        created_by)
        VALUES (#{pkOrgId},
        #{selfDeptId},
        #{communityId},
        #{buildingId},
        #{name},
        #{room},
        #{hall},
        #{bathroom},
        #{houseArea},
        #{usedArea},
        #{publicArea},
        #{storageNo},
        #{parkingNo},
        #{orientation},
        #{propertyYears},
        #{floorNum},
        #{houseType},
        #{houseStatus},
        #{usedStatus},
        #{deliveryTime},
        #{description},
        #{createdOn},
        #{createdBy})
    </insert>

    <insert id="insertPropertyHouse">
        INSERT INTO house
        (pk_org_id,
        self_dept_id,
        community_id,
        region_id,
        building_id,
        floor_id,
        name,
        house_area,
        used_area,
        public_area,
        used_status,
        house_attribute,
        description,
        created_on,
        created_by)
        VALUES (#{pkOrgId},
        #{selfDeptId},
        #{parkId},
        #{regionId},
        #{buildingId},
        #{floorId},
        #{houseNum},
        #{houseArea},
        #{usedArea},
        #{publicArea},
        #{usedStatus},
        #{houseAttribute},
        #{description},
        #{createdOn},
        #{createdBy})
    </insert>

    <update id="update" parameterType="cn.cuiot.dmp.system.infrastructure.entity.HouseEntity">
        update
        house
        <trim prefix="SET" suffixOverrides=",">
            delivery_time = #{deliveryTime},
            <if test="communityId != null and communityId != '' ">
                community_id = #{communityId},
            </if>
            <if test="buildingId != null and buildingId != '' ">
                building_id = #{buildingId},
            </if>
            <if test="name != null and name != '' ">
                name = #{name},
            </if>
            room = #{room},
            hall = #{hall},
            bathroom = #{bathroom},
            <if test="houseArea != null and houseArea != '' ">
                house_area = #{houseArea},
            </if>
            used_area = #{usedArea},
            public_area = #{publicArea},
            storage_no = #{storageNo},
            parking_no = #{parkingNo},
            orientation = #{orientation},
            <if test="propertyYears != null and propertyYears != '' ">
                property_years = #{propertyYears},
            </if>
            <if test="floorNum != null and floorNum != '' ">
                floor_num = #{floorNum},
            </if>
            <if test="houseType != null and houseType != '' ">
                house_type = #{houseType},
            </if>
            <if test="houseStatus != null and houseStatus != '' ">
                house_status = #{houseStatus},
            </if>
            <if test="usedStatus != null and usedStatus != '' ">
                used_status = #{usedStatus},
            </if>
            description = #{description},
            updated_on = #{updatedOn},
            updated_by = #{updatedBy},
        </trim>
        where id = #{id}
        and deleted_flag = 0
    </update>

    <select id="selectByPrimary" resultType="cn.cuiot.dmp.system.infrastructure.entity.HouseEntity">
        select
        <include refid="column"/>
        from
            house
        where id = #{id}
        and deleted_flag = 0
    </select>

    <update id="batchDelete">
        UPDATE house
        SET deleted_flag = 1,
        deleted_on = NOW(),
        deleted_by = #{userId}
        WHERE
        id IN
        <foreach collection="ids" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </update>

    <select id="selectPropertyHouseNameExist" resultType="java.lang.Integer">
        SELECT
        count(0)
        FROM
        house
        WHERE
        community_id = #{parkId}
        AND building_id = #{buildingId}
        AND floor_id = #{floorId}
        <if test="regionId != null and regionId !=''">
            AND region_id = #{regionId}
        </if>
        AND `name` = #{houseNum}
        AND deleted_flag = 0
    </select>

    <select id="selectPropertyByPrimary" resultType="cn.cuiot.dmp.system.infrastructure.entity.dto.PropertyHouseInfoResDto">
        select
            h.id ,
            h.pk_org_id,
            h.self_dept_id  houseId,
            h.community_id   parkId,
            h.region_id,
            (SELECT department_name from department where id = h.region_id and `d_group` = 6) as region_name,
            (SELECT parent_id from department where id = h.community_id ) as deptId,
            (SELECT path from department where id = deptId) as deptTreePath,
            (SELECT department_name from department where id = deptId) as deptName,
            building_id,
            (SELECT code from department where id = h.community_id and `d_group` = 3) as parkCode,
            (SELECT department_name from department where id = h.community_id and `d_group` = 3) as parkName,
            building_id,
            (SELECT department_name from department where id = h.building_id and `d_group` = 4) as building_name,
            (SELECT department_name from department where id = h.floor_id and `d_group` = 7) as floor_name,
            floor_id,
            (SELECT department_name from department where id = h.self_dept_id  and `d_group` = 5) as house_name,
            (SELECT val from department_property WHERE dept_id = building_id AND  property_key = 'floor_num') as buildingFloor,
            (SELECT val from department_property WHERE dept_id = floor_id AND  property_key = 'current_floor') as currentFloor,
            h.name houseNum,
            h.house_area,
            h.used_area,
            h.public_area,
            h.house_attribute,
            h.description,
            h.created_on,
            h.used_status as usedStatus
        from
            house h
        LEFT JOIN
            department d ON h.self_dept_id = d.id
        where
            h.id = #{id}
        and
            deleted_flag = 0
        AND
            d.path like concat(#{path}, '%')
    </select>

    <update id="updatePropertyHouse">
        update
        house
        <trim prefix="SET" suffixOverrides=",">
            <if test="houseNum != null and houseNum != '' ">
                name = #{houseNum},
            </if>
            <if test="houseArea != null and houseArea != '' ">
                house_area = #{houseArea},
            </if>
            <if test="usedArea != null">
                used_area = #{usedArea},
            </if>
            <if test="publicArea != null">
                public_area = #{publicArea},
            </if>
            <if test="houseAttribute != null and houseAttribute != '' ">
                house_attribute = #{houseAttribute},
            </if>
            <if test="usedStatus != null and usedStatus != '' ">
                used_status = #{usedStatus},
            </if>
            description = #{description},
            updated_on = #{updatedOn},
            updated_by = #{updatedBy},
        </trim>
        where id = #{id}
        and deleted_flag = 0
    </update>

    <select id="selectPropertyHouseList" resultType="cn.cuiot.dmp.system.infrastructure.entity.vo.PropertyHouseListReqVO">
        select
        t.*,
        get_full_space_name(t.path) as spaceName
        from (
        select
        h.id ,
        h.pk_org_id,
        h.community_id   parkId,
        h.self_dept_id   houseId,
        region_id,
        (SELECT department_name from department where id = h.region_id and `d_group` = 6) as region_name,
        building_id,
        (SELECT department_name from department where id = h.community_id and `d_group` = 3) as parkName,
        (SELECT department_name from department where id = h.building_id and `d_group` = 4) as building_name,
        (SELECT department_name from department where id = h.floor_id and `d_group` = 7) as floor_name,
        floor_id,
        (SELECT department_name from department where id = h.self_dept_id  and `d_group` = 5) as house_name,
        (SELECT val from department_property WHERE dept_id = building_id AND  property_key = 'floor_num') as buildingFloor,
        (SELECT val from department_property WHERE dept_id = floor_id AND  property_key = 'current_floor') as currentFloor,
        h.name houseNum,
        h.house_area,
        h.used_area,
        h.public_area,
        h.house_attribute,
        h.description,
        h.created_on,
        h.used_status,
        d.path
        from house h
        LEFT JOIN org_label ol on h.pk_org_id = ol.org_id
        LEFT JOIN department d ON d.id = h.self_dept_id
        where deleted_flag = 0
        and d.path like concat(#{spaceTreePath}, '%')
        <if test="keyword!=null and keyword != ''">
            AND d.department_name like concat('%',#{keyword}, '%')  and d.d_group = 5
        </if>
        <if test="labelId != null">
            AND ol.label_id = #{labelId}
        </if>
        <if test="usedStatusList != null and usedStatusList.size() != 0">
            and h.used_status in
            <foreach collection="usedStatusList" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </if>
        order by created_on desc,id desc
        ) t
    </select>

    <select id="getDeptIdByHouseId" resultType="java.lang.String">
        SELECT
        self_dept_id
        FROM
        house
        WHERE
        id = #{houseId}
    </select>

</mapper>