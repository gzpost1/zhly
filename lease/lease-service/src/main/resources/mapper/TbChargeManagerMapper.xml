<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cuiot.dmp.lease.mapper.charge.TbChargeManagerMapper">
    <resultMap id="BaseResultMap" type="cn.cuiot.dmp.lease.entity.charge.TbChargeManager">
        <!--@mbg.generated-->
        <!--@Table tb_charge_manager-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="customer_user_id" jdbcType="BIGINT" property="customerUserId"/>
        <result column="house_id" jdbcType="BIGINT" property="houseId"/>
        <result column="order_id" jdbcType="BIGINT" property="orderId"/>
        <result column="loupan_id" jdbcType="BIGINT" property="loupanId"/>
        <result column="charge_item_id" jdbcType="BIGINT" property="chargeItemId"/>
        <result column="charge_standard" jdbcType="BIGINT" property="chargeStandard"/>
        <result column="receivable_amount" jdbcType="INTEGER" property="receivableAmount"/>
        <result column="charge_type" jdbcType="TINYINT" property="chargeType"/>
        <result column="ownership_period_begin" jdbcType="DATE" property="ownershipPeriodBegin"/>
        <result column="ownership_period_end" jdbcType="DATE" property="ownershipPeriodEnd"/>
        <result column="company_id" jdbcType="BIGINT" property="companyId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="last_pay_time" jdbcType="TIMESTAMP" property="lastPayTime"/>
        <result column="update_user" jdbcType="BIGINT" property="updateUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="BIGINT" property="createUser"/>
        <result column="deleted" jdbcType="TINYINT" property="deleted"/>
        <result column="due_date" jdbcType="TIMESTAMP" property="dueDate"/>
        <result column="create_type" jdbcType="TINYINT" property="createType"/>
        <result column="receivble_plan_id" jdbcType="BIGINT" property="receivblePlanId"/>
        <result column="receivble_status" jdbcType="TINYINT" property="receivbleStatus"/>
        <result column="hang_up_status" jdbcType="TINYINT" property="hangUpStatus"/>
        <result column="abrogate_status" jdbcType="TINYINT" property="abrogateStatus"/>
        <result column="pay_status" jdbcType="TINYINT" property="payStatus"/>
        <result column="receivable_amount_rate" jdbcType="DECIMAL" property="receivableAmountRate"/>
        <result column="receivable_amount_received" jdbcType="INTEGER" property="receivableAmountReceived"/>
        <result column="liquidated_damages_need" jdbcType="INTEGER" property="liquidatedDamagesNeed"/>
        <result column="liquidated_damages_received" jdbcType="INTEGER" property="liquidatedDamagesReceived"/>
        <result column="liquidated_damages_tax" jdbcType="INTEGER" property="liquidatedDamagesTax"/>
        <result column="liquidated_damages_not_tax" jdbcType="INTEGER" property="liquidatedDamagesNotTax"/>
        <result column="page_liquidated_damages_need" jdbcType="INTEGER" property="pageLiquidatedDamagesNeed"/>
        <result column="page_liquidated_damages_rate" jdbcType="DECIMAL" property="pageLiquidatedDamagesRate"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        customer_user_id,
        house_id,
        charge_item_id,
        charge_standard,
        receivable_amount,
        charge_type,
        ownership_period_begin,
        ownership_period_end,
        company_id,
        update_time,
        update_user,
        create_time,
        create_user,
        deleted,
        due_date,
        create_type,
        receivble_plan_id,
        receivble_status,
        hang_up_status,
        abrogate_status,
        receivable_amount_rate,
        receivable_amount_received,
        liquidated_damages_need,
        liquidated_damages_received,
        liquidated_damages_tax,
        loupan_id,
        page_liquidated_damages_need,
        page_liquidated_damages_rate,
        last_pay_time,
        pay_status,
        order_id,
        liquidated_damages_not_tax
    </sql>

    <select id="queryForPage" resultType="cn.cuiot.dmp.lease.dto.charge.ChargeManagerPageDto">
        select *
        from tb_charge_manager
        where deleted = 0
        <if test="query.houseId != null">
            and house_id = #{query.houseId}
        </if>
        <if test="query.customerUserId != null">
            and customer_user_id = #{query.customerUserId}
        </if>
        <if test="query.companyId != null">
            and company_id = #{query.companyId}
        </if>
        <if test="query.receivblePlanId != null">
            and receivble_plan_id = #{query.receivblePlanId}
        </if>
        <if test="query.receivableCode != null">
            and id like concat('%', #{query.receivableCode}, '%')
        </if>
        <if test="query.receivbleStatus != null">
            and receivble_status = #{query.receivbleStatus}
        </if>
        <if test="query.receivbleStatusList != null and query.receivbleStatusList.size() > 0 ">
            and receivble_status in (
            <foreach collection="query.receivbleStatusList" item="item" index="index" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test="query.hangUpStatus != null">
            and hang_up_status = #{query.hangUpStatus}
        </if>
        <if test="query.abrogateStatus != null">
            and abrogate_status = #{query.abrogateStatus}
        </if>
        <if test="query.chargeItemId != null">
            and charge_item_id = #{query.chargeItemId}
        </if>
        <if test="query.ownershipPeriodBegin != null">
            and ownership_period_begin &gt;= #{query.ownershipPeriodBegin}
        </if>
        <if test="query.ownershipPeriodEnd != null">
            and ownership_period_end &lt;= #{query.ownershipPeriodEnd}
        </if>
        <if test="query.dueDateBegin != null">
            and due_date &gt;= #{query.dueDateBegin}
        </if>
        <if test="query.dueDateEnd != null">
            and due_date &lt;= #{query.dueDateEnd}
        </if>
        order by create_time desc
    </select>

    <select id="queryForHouseDetail" resultType="cn.cuiot.dmp.lease.dto.charge.ChargeHouseDetailDto">
        select house_id,
               sum(receivable_amount_received) + sum(liquidated_damages_received) as paid_amount,
               sum(if(hang_up_status = 0 AND abrogate_status = 0,receivable_amount,0)) - sum(if(hang_up_status = 0 AND abrogate_status = 0,receivable_amount_received,0))           as total_arrears

        from tb_charge_manager
        where deleted = 0
          and house_id = #{id}
    </select>

    <update id="receivedAmount">
        UPDATE tb_charge_manager
        set
        receivble_status            = if(
        receivable_amount_received + #{received.receivableAmountReceived} = receivable_amount, 2, 1),
        liquidated_damages_need     = liquidated_damages_need + #{received.liquidatedDamagesNeed},
        liquidated_damages_received = liquidated_damages_received + #{received.liquidatedDamagesReceived},
        liquidated_damages_tax      = liquidated_damages_tax + #{received.liquidatedDamagesTax},
        liquidated_damages_not_tax  = liquidated_damages_not_tax + #{received.liquidatedDamagesNotTax},
        receivable_amount_received  = receivable_amount_received + #{received.receivableAmountReceived},
        pay_status = 3,
        last_pay_time = now()
        where id = #{received.chargeId}
          and hang_up_status = 0
          and receivble_status in (0, 1)
          and abrogate_status = 0
          and pay_status != 0
          and receivable_amount >= receivable_amount_received + #{received.receivableAmountReceived}
    </update>

    <select id="getHouseInfoByIds" resultType="cn.cuiot.dmp.lease.dto.charge.HouseInfoDto">
        select b.id   as house_id,
               b.name as house_name,
               b.code as house_code,
               a.name as loupan_name
        from tb_building_archives a
            inner join tb_houses_archives b on a.id = b.loupan_id
        where a.deleted = 0
          and b.deleted = 0
          and b.id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="getOwnerInfo" resultType="cn.cuiot.dmp.lease.dto.charge.ChargeHouseDetailDto">
        SELECT GROUP_CONCAT(a.customer_name) as owner_name,
               GROUP_CONCAT(a.contact_phone) as owner_phone
        from tb_customer a
                 INNER JOIN tb_customer_house b on a.id = b.customer_id
        where a.deleted = 0
          and b.deleted = 0
          and b.identity_type = 1
          and b.house_id = #{houseId}
    </select>

    <select id="getUserInfo" resultType="cn.cuiot.dmp.lease.dto.charge.CustomerUserInfo">
        SELECT a.id            as customer_user_id,
               a.customer_name  as customer_user_name,
               a.contact_phone as customer_user_phone,
               b.identity_type,
               b.house_id
        from
        tb_customer a
            LEFT JOIN tb_customer_house b on a.id = b.customer_id and b.deleted = 0 and b.house_id in
        <foreach collection="houseIds" item="houseid" open="(" close=")" separator=",">
            #{houseid}
        </foreach>
        where a.deleted = 0
          and a.id in
        <foreach collection="userIds" item="userid" open="(" close=")" separator=",">
            #{userid}
        </foreach>
    </select>

    <select id="getUserInfoByIds" resultType="cn.cuiot.dmp.lease.dto.charge.CustomerUserInfo">
        SELECT a.id            as customer_user_id,
               a.customer_name  as customer_user_name,
               a.contact_phone as customer_user_phone
        from tb_customer a
        where a.deleted = 0
          and a.id in
        <foreach collection="userIds" item="userid" open="(" close=")" separator=",">
            #{userid}
        </foreach>
    </select>

    <select id="queryHouseCustmerPage" resultType="cn.cuiot.dmp.lease.dto.charge.CustomerUserInfo">
        SELECT a.id            as customer_user_id,
               a.customer_name as customer_user_name,
               a.contact_phone as customer_user_phone,
               b.identity_type,
               b.house_id
        from tb_customer a
                 INNER JOIN tb_customer_house b on a.id = b.customer_id
        where a.deleted = 0
          and b.deleted = 0
        <if test="query.houseId != null">
            and b.house_id = #{query.houseId}
        </if>
        <if test="query.loupanId != null">
            and b.loupan_id = #{query.loupanId}
        </if>
        <if test="query.customerUserName != null">
            and a.customer_name like concat('%', #{query.customerUserName}, '%')
        </if>
        order by a.create_time desc
    </select>

<!--auto generated by MybatisCodeHelper on 2024-06-20-->
    <insert id="insertList">
        INSERT INTO tb_charge_manager(
        id,
        customer_user_id,
        house_id,
        charge_item_id,
        charge_standard,
        receivable_amount,
        charge_type,
        ownership_period_begin,
        ownership_period_end,
        company_id,
        due_date,
        create_type,
        receivble_plan_id,
        receivble_status,
        hang_up_status,
        abrogate_status,
        receivable_amount_rate,
        receivable_amount_received,
        liquidated_damages_need,
        liquidated_damages_received,
        liquidated_damages_tax,
        liquidated_damages_not_tax,
        create_time,
        update_time,
        create_user,
        update_user,
        loupan_id,
        pay_status,
        order_id,
        deleted
        )VALUES
        <foreach collection="list" item="element" index="index" separator=",">
            (
            #{element.id,jdbcType=BIGINT},
            #{element.customerUserId,jdbcType=BIGINT},
            #{element.houseId,jdbcType=BIGINT},
            #{element.chargeItemId,jdbcType=BIGINT},
            #{element.chargeStandard,jdbcType=BIGINT},
            #{element.receivableAmount,jdbcType=INTEGER},
            #{element.chargeType,jdbcType=TINYINT},
            #{element.ownershipPeriodBegin,jdbcType=DATE},
            #{element.ownershipPeriodEnd,jdbcType=DATE},
            #{element.companyId,jdbcType=BIGINT},
            #{element.dueDate,jdbcType=TIMESTAMP},
            #{element.createType,jdbcType=TINYINT},
            #{element.receivblePlanId,jdbcType=BIGINT},
            #{element.receivbleStatus,jdbcType=TINYINT},
            #{element.hangUpStatus,jdbcType=TINYINT},
            #{element.abrogateStatus,jdbcType=TINYINT},
            #{element.receivableAmountRate,jdbcType=DECIMAL},
            #{element.receivableAmountReceived,jdbcType=INTEGER},
            #{element.liquidatedDamagesNeed,jdbcType=INTEGER},
            #{element.liquidatedDamagesReceived,jdbcType=INTEGER},
            #{element.liquidatedDamagesTax,jdbcType=INTEGER},
            #{element.liquidatedDamagesNotTax,jdbcType=INTEGER},
            #{element.createTime,jdbcType=TIMESTAMP},
            #{element.updateTime,jdbcType=TIMESTAMP},
            #{element.createUser,jdbcType=BIGINT},
            #{element.updateUser,jdbcType=BIGINT},
            #{element.loupanId,jdbcType=BIGINT},
            #{element.payStatus,jdbcType=TINYINT},
            #{element.orderId,jdbcType=BIGINT},
            #{element.deleted,jdbcType=TINYINT}
            )
        </foreach>
    </insert>

    <select id="queryCollectionManagePage" parameterType="cn.cuiot.dmp.lease.dto.charge.ChargeCollectionManageQuery"
            resultType="cn.cuiot.dmp.lease.vo.ChargeCollectionManageVo">
        SELECT
        a.customer_user_id customerUserId,
        a.amount,
        b.customer_name customerUserName,
        b.contact_phone customerUserPhone
        FROM
        (SELECT
        customer_user_id ,
        COALESCE( SUM(receivable_amount - receivable_amount_received), 0) amount
        FROM
        tb_charge_manager
        <where>
            deleted = 0
            <if test="params.companyId != null">
                AND company_id = #{params.companyId}
            </if>
            AND receivble_status IN (0,1)
            AND abrogate_status = 0
            AND hang_up_status = 0
            AND due_date <![CDATA[ <= ]]> #{params.dueDate}
        </where>
        GROUP BY customer_user_id
        ORDER BY amount DESC
        ) a
        LEFT JOIN tb_customer b ON a.customer_user_id = b.id
        <where>
            <if test="params.customerUserName != null and params.customerUserName != ''">
                AND b.customer_name LIKE CONCAT('%',#{params.customerUserName},'%')
            </if>
            <if test="params.customerUserPhone != null and params.customerUserPhone != ''">
                AND b.contact_phone = #{params.customerUserPhone}
            </if>
        </where>
    </select>

    <select id="customerStatistics" parameterType="cn.cuiot.dmp.lease.dto.charge.TbChargeManagerQuery"
            resultType="cn.cuiot.dmp.lease.vo.ChargeManagerCustomerStatisticsVo">
        SELECT
        COALESCE( SUM( receivable_amount ), 0) receivableAmount,
        COALESCE( SUM( receivable_amount_received ), 0) receivableAmountReceived
        FROM
        tb_charge_manager
        <where>
            deleted = 0
            <if test="query.houseId != null">
                and house_id = #{query.houseId}
            </if>
            <if test="query.customerUserId != null">
                and customer_user_id = #{query.customerUserId}
            </if>
            <if test="query.companyId != null">
                and company_id = #{query.companyId}
            </if>
            <if test="query.receivblePlanId != null">
                and receivble_plan_id = #{query.receivblePlanId}
            </if>
            <if test="query.receivableCode != null">
                and id like concat('%', #{query.receivableCode}, '%')
            </if>
            <if test="query.receivbleStatus != null">
                and receivble_status = #{query.receivbleStatus}
            </if>
            <if test="query.receivbleStatusList != null and query.receivbleStatusList.size() > 0 ">
                and receivble_status in (
                <foreach collection="query.receivbleStatusList" item="item" index="index" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="query.hangUpStatus != null">
                and hang_up_status = #{query.hangUpStatus}
            </if>
            <if test="query.abrogateStatus != null">
                and abrogate_status = #{query.abrogateStatus}
            </if>
            <if test="query.chargeItemId != null">
                and charge_item_id = #{query.chargeItemId}
            </if>
            <if test="query.ownershipPeriodBegin != null">
                and ownership_period_begin &gt;= #{query.ownershipPeriodBegin}
            </if>
            <if test="query.ownershipPeriodEnd != null">
                and ownership_period_end &lt;= #{query.ownershipPeriodEnd}
            </if>
            <if test="query.dueDateBegin != null">
                and due_date &gt;= #{query.dueDateBegin}
            </if>
            <if test="query.dueDateEnd != null">
                and due_date &lt;= #{query.dueDateEnd}
            </if>
        </where>
    </select>

    <select id="queryUserArrearsStatistics" parameterType="cn.cuiot.dmp.lease.dto.charge.ChargeCollectionManageSendQuery"
            resultType="cn.cuiot.dmp.lease.dto.charge.ChargeCollectionManageSendDto">
        SELECT
        a.customer_user_id,
        a.company_id,
        a.loupan_id buildingId,
        COUNT(1) total,
        round(SUM(a.receivable_amount - a.receivable_amount_received) / 100, 2) amount
        FROM
        tb_charge_manager a
        <if test="params.operationType == 2">
            INNER JOIN tb_charge_collection_plan_building b ON a.loupan_id = b.building_id AND b.charge_collection_plan_id = #{params.planId}
            INNER JOIN tb_charge_collection_plan_item c ON a.charge_item_id = c.charge_item_id AND c.charge_collection_plan_id = #{params.planId}
        </if>
        <where>
            a.deleted = 0
            AND a.company_id = #{params.companyId}
            AND a.receivble_status IN (0,1)
            AND a.abrogate_status = 0
            AND a.hang_up_status = 0
            AND a.due_date <![CDATA[ <= ]]> #{params.dueDate}
            <if test="params.customerUserIds != null and params.customerUserIds.size() > 0">
                AND a.customer_user_id IN (
                <foreach collection="params.customerUserIds" index="index" item="item" separator=",">
                    #{item}
                </foreach>
                )
            </if>
        </where>
        GROUP BY a.customer_user_id
    </select>

    <select id="appChargeManager" resultType="cn.cuiot.dmp.lease.dto.charge.AppChargeManagerDto">
        select
            id,house_id,charge_item_id,ownership_period_begin,ownership_period_end,create_time,receivable_amount,receivable_amount_received,last_pay_time
        from
            tb_charge_manager
        <where>
            deleted = 0
            and house_id = #{query.houseId}
            <if test="query.receivableStatus != null and query.receivableStatus.toString() == '0'.toString() ">
                and receivble_status IN (0,1)
            </if>
            <if test="query.receivableStatus != null and query.receivableStatus.toString() == '1'.toString() ">
                and receivble_status = 2
            </if>
            and abrogate_status = 0
            and hang_up_status = 0
            <if test="query.receivableStatus != null and query.receivableStatus.toString() == '0'.toString() ">
                order by due_date desc
            </if>
            <if test="query.receivableStatus != null and query.receivableStatus.toString() == '1'.toString() ">
                order by last_pay_time desc
            </if>
        </where>
    </select>

    <update id="updateChargePayStatus">
        update tb_charge_manager
        set pay_status = 0,
        order_id = #{orderId}
        where
        deleted = 0
        and receivble_status in (0,1)
        and hang_up_status = 0
        and abrogate_status = 0
        and pay_status != 0
        and id in
        <foreach collection="chargeIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="queryForPayToWechat" resultType="cn.cuiot.dmp.lease.dto.charge.ChargePayToWechatDetailDto">
         select
             id,(receivable_amount-receivable_amount_received) as chargeAmount
        from tb_charge_manager
        where
        deleted = 0
        and receivble_status in (0,1)
        and hang_up_status = 0
        and abrogate_status = 0
        and pay_status != 0
        and id in
        <foreach collection="chargeIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryNeedPayPage" resultType="cn.cuiot.dmp.lease.dto.charge.Chargeovertimeorderdto">
        select
            id as data_id,order_id
        from tb_charge_manager
        where
            receivble_status in (0,1)
        and pay_status = 0

    </select>

    <update id="updateChargePayStatusToSuccsess">
        update tb_charge_manager
        set pay_status       = 3,
            receivble_status = 2,
            receivable_amount_received = receivable_amount,
            last_pay_time    = now()
        where receivble_status in (0, 1)
          and pay_status = 0
          and id in
        <foreach collection="chargeIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateChargePayStatusToCancel">
        update tb_charge_manager
        set pay_status = 1
        where
        receivble_status in (0, 1)
        and pay_status = 0
        and id in
        <foreach collection="chargeIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="queryNeedToPayAmount" resultType="cn.cuiot.dmp.lease.dto.charge.PrePayAmountAndHouseId">
        select (receivable_amount-receivable_amount_received) as amount,house_id as houseId from tb_charge_manager where deleted = 0 and receivble_status in (0,1) and pay_status != 0 and id = #{chargeId}
    </select>

    <update id="updateChargePayStatusToPaySuccessBYPrePay">
        update tb_charge_manager
        set pay_status = 3,
            receivble_status = 2,
            receivable_amount_received =  receivable_amount_received + #{needToPayAmount},
            last_pay_time = now()
        where deleted = 0 and receivble_status in (0,1) and pay_status != 0 and id = #{chargeId}
          and receivable_amount = receivable_amount_received + #{needToPayAmount}
    </update>

    <select id="queryOverTimeOrderAndClosePage" resultType="cn.cuiot.dmp.lease.dto.charge.Chargeovertimeorderdto">
        select
            a.id as data_id
        from tb_charge_manager a
            inner join tb_pre_pay_auto_config b on a.company_id = b.company_id
        where
            a.deleted = 0
        and b.is_auto_pay = 1
        and b.charge_item_ids like concat('%',a.charge_item_id,'%')
        and a.receivble_status in (0,1)
        and a.pay_status != 0
        and date_format(now(),'%Y-%m-%d') = date_format(due_date,'%Y-%m-%d')
        and a.hang_up_status = 0
        and a.abrogate_status = 0
        order by (a.receivable_amount-a.receivable_amount_received) desc
    </select>
</mapper>